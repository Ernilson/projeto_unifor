# A linha 'version' foi removida por ser obsoleta
services:
  keycloak:
    image: quay.io/keycloak/keycloak:24.0
    command: ["start-dev", "--import-realm", "--hostname-strict=false"]
    environment:
      KC_DB: dev-mem
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin     
      KC_SPI_FRAME_ANCESTORS: "'self' http://localhost:4200"
    volumes:
      # O caminho './keycloak/import' agora é relativo à raiz do projeto
      - ./keycloak/import:/opt/keycloak/data/import
    ports:
      - "8081:8080"
    container_name: keycloak-app

  db:
    image: postgres:16
    environment:
      POSTGRES_USER: app
      POSTGRES_PASSWORD: app
      POSTGRES_DB: escola
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U app -d escola"]
      interval: 5s
      timeout: 5s
      retries: 10
    container_name: postgres-db

  backend:
    build:
      # --- CORREÇÃO IMPORTANTE ---
      # O contexto agora é a pasta 'backend' dentro do diretório atual
      context: ./backend # Assumindo que você renomeou 'desafio_dev_senior' para 'backend'
      dockerfile: src/main/docker/Dockerfile.jvm
    environment:
      QUARKUS_DATASOURCE_JDBC_URL: jdbc:postgresql://db:5432/escola
      QUARKUS_OIDC_AUTH_SERVER_URL: http://keycloak:8080/realms/unifor
    depends_on:
      - db
      - keycloak
    ports:
      - "8080:8080"
    container_name: backend-api

  # --- NOVO SERVIÇO ADICIONADO ---
  frontend:
    build:
      # O contexto é a pasta 'frontend' dentro do diretório atual
      context: ./frontend # Assumindo que você renomeou 'Quarkus-Angular-Keycloak' para 'frontend'
      dockerfile: Dockerfile # O Dockerfile que criamos anteriormente
    ports:
      # Expõe a porta 4200 do Angular para a sua máquina
      - "4200:4200"
    volumes:
      # Mapeia o código-fonte para ativar o Live-Reload
      - ./frontend:/app
      - /app/node_modules # Isola a pasta node_modules para usar a do container
    depends_on:
      - backend
    container_name: frontend-app
